import java.util.Arrays;

public class Utility {

	static public void binsearch(String arr[],int n,String key)
	{
		Arrays.sort(arr);
		/*for(int i=0;i<n;i++)
		{
			System.out.println(arr[i]+" ");		
		}*/
		int low=0;
		int high=n-1;
		while(low<=high)
		{
			int mid=(low+high)/2;
			if(arr[mid].compareTo(key)<0)
			{
				low=mid+1;
			}
			else if(arr[mid].compareTo(key)>0)
			{
				high=mid-1;
			}
			else
			{
				System.out.println("Element found:  "+arr[mid]);
				return;
			}
		}
		System.out.println("Element not found");

	}
	public  void insertion(String[] arr, int n) {

		for(int i=1;i<n;i++)
		{
			String key=arr[i];
			int j=i-1;
			while(j>=0 && key.compareTo(arr[j])<0)
			{
				arr[j+1]=arr[j];
				j=j-1;
			}
			arr[j+1]=key;	

		}
		System.out.println("Sorted array is: ");
		for(int i=0;i<n;i++)
		{
			System.out.println(arr[i]+" ");
		}

	}
	public  void bubble(String[] arr, int n) {

		for(int i=0;i<n;i++) 
		{
			for(int j=1;j<n;j++)
			{
				if(arr[j-1].compareTo(arr[j])>0)
				{
					String temp=arr[j-1];
					arr[j-1]=arr[j];
					arr[j]=temp;
				}
			}
		}
		System.out.println("Sorted array is: ");

		for(int i=0;i<n;i++)
		{
			System.out.println(arr[i]);
		}
	}
	public void bubbleInt(int arr[], int n)
	{
		for(int i=0;i<n;i++)
		{
			for(int j=1;j<n-i;j++)
			{
				if(arr[j-1]>arr[j])
				{
					int temp=arr[j-1];
					arr[j-1]=arr[j];
					arr[j]=temp;
				}
			}
		}
		System.out.println("sorted array is");

		for (int i=0;i<n;i++)
		{
			System.out.print(arr[i]+" ");
		}
	}
	public void InsertionInt(int arr[], int n)
	{
		for(int i=1;i<n;i++)
		{
			int key=arr[i];
			int j=i-1;
			while(j>=0 && arr[j]>key)
			{
				arr[j+1]=arr[j];
				j=j-1;
			}
			arr[j+1]=key;
		}
		System.out.println("sorted array is");
		for(int i=0;i<n;i++)
		{
			System.out.print(arr[i]+ " ");
		}
	}
	static public void binsearchInt(int arr[],int n,int key)
	{
		Arrays.sort(arr);
		/*for(int i=0;i<n;i++)
		{
			System.out.println(arr[i]+" ");		
		}*/
		int low=0;
		int high=n-1;
		while(low<=high)
		{
			int mid=(low+high)/2;
			if(key>arr[mid])
			{
				low=mid+1;
			}
			else if(key<arr[mid])
			{
				high=mid-1;
			}
			else
			{
				System.out.println("Element found:  "+arr[mid]);
				return;
			}
		}
		System.out.println("Element not found");

	}
}